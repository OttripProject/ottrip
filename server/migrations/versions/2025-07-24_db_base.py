"""db base


Revision ID: c458c402844b
Revises:
Create Date: 2025-07-24 17:11:17.360313

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c458c402844b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("handle", sa.String(length=36), nullable=False),
        sa.Column("nickname", sa.String(length=30), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=False),
        sa.Column(
            "gender", sa.Enum("MALE", "FEMALE", "OTHER", name="gender"), nullable=True
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_handle"), "user", ["handle"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "plan",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=36), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("total_amount", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_plan_id"), "plan", ["id"], unique=False)
    op.create_table(
        "user_auth",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("verified_email", sa.String(), nullable=True),
        sa.Column("google_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("google_id"),
        sa.UniqueConstraint("verified_email"),
    )
    op.create_table(
        "accommodation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("memo", sa.String(), nullable=True),
        sa.Column("plan_id", sa.Integer(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["plan.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_accommodation_id"), "accommodation", ["id"], unique=False)
    op.create_table(
        "flight",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("airline", sa.String(), nullable=False),
        sa.Column("flight_number", sa.String(), nullable=False),
        sa.Column("departure_airport", sa.String(), nullable=False),
        sa.Column("arrival_airport", sa.String(), nullable=False),
        sa.Column("departure_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("arrival_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("seat_class", sa.String(), nullable=False),
        sa.Column("seat_number", sa.String(), nullable=False),
        sa.Column("duration", sa.String(), nullable=True),
        sa.Column("memo", sa.String(), nullable=True),
        sa.Column("plan_id", sa.Integer(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["plan.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_flight_id"), "flight", ["id"], unique=False)
    op.create_table(
        "itinerary",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("itinerary_date", sa.Date(), nullable=False),
        sa.Column("start_time", sa.Time(), nullable=False),
        sa.Column("end_time", sa.Time(), nullable=False),
        sa.Column("plan_id", sa.Integer(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["plan.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_itinerary_id"), "itinerary", ["id"], unique=False)
    op.create_table(
        "expense",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "FOOD",
                "TRANSPORT",
                "FLIGHT",
                "ACTIVITY",
                "ACCOMMODATION",
                "SHOPPING",
                "ETC",
                name="expensecategory",
            ),
            nullable=False,
        ),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("ex_date", sa.Date(), nullable=False),
        sa.Column("plan_id", sa.Integer(), nullable=False),
        sa.Column("itinerary_id", sa.Integer(), nullable=True),
        sa.Column("flight_id", sa.Integer(), nullable=True),
        sa.Column("accommodation_id", sa.Integer(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accommodation_id"], ["accommodation.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["flight_id"], ["flight.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["itinerary_id"],
            ["itinerary.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["plan.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("accommodation_id"),
        sa.UniqueConstraint("flight_id"),
    )
    op.create_index(op.f("ix_expense_id"), "expense", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_expense_id"), table_name="expense")
    op.drop_table("expense")
    op.drop_index(op.f("ix_itinerary_id"), table_name="itinerary")
    op.drop_table("itinerary")
    op.drop_index(op.f("ix_flight_id"), table_name="flight")
    op.drop_table("flight")
    op.drop_index(op.f("ix_accommodation_id"), table_name="accommodation")
    op.drop_table("accommodation")
    op.drop_table("user_auth")
    op.drop_index(op.f("ix_plan_id"), table_name="plan")
    op.drop_table("plan")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_handle"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
