"""expense date change

Revision ID: 047b03309e38
Revises: 750db88b3f17
Create Date: 2025-07-24 09:41:39.579250

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "047b03309e38"
down_revision: Union[str, None] = "750db88b3f17"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("expense", sa.Column("ex_date", sa.Date(), nullable=False))
    op.alter_column("expense", "description", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_column("expense", "date")
    op.alter_column(
        "flight",
        "departure_time",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "flight",
        "arrival_time",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "flight",
        "arrival_time",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "flight",
        "departure_time",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.add_column(
        "expense", sa.Column("date", sa.DATE(), autoincrement=False, nullable=False)
    )
    op.alter_column(
        "expense", "description", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_column("expense", "ex_date")
    # ### end Alembic commands ###
